"""Add missing intervention fields to database schema

Revision ID: 83364386f92b
Revises: 919599410cbe
Create Date: 2025-06-25 23:36:40.100270

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '83364386f92b'
down_revision: Union[str, Sequence[str], None] = '919599410cbe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('interventions', sa.Column('description', sa.String(), nullable=True))
    op.add_column('interventions', sa.Column('intervention_type', sa.String(), nullable=True))
    op.add_column('interventions', sa.Column('location_lat', sa.Float(), nullable=True))
    op.add_column('interventions', sa.Column('location_lon', sa.Float(), nullable=True))
    op.add_column('interventions', sa.Column('deployment_date', sa.DateTime(), nullable=True))
    op.add_column('interventions', sa.Column('capacity_tonnes_co2', sa.Float(), nullable=True))
    op.add_column('interventions', sa.Column('status', sa.String(), nullable=True))
    op.add_column('interventions', sa.Column('operator', sa.String(), nullable=True))
    op.add_column('interventions', sa.Column('cost_per_tonne', sa.Float(), nullable=True))
    op.add_column('interventions', sa.Column('technology_readiness_level', sa.Integer(), nullable=True))
    op.add_column('interventions', sa.Column('verification_method', sa.String(), nullable=True))
    op.add_column('interventions', sa.Column('expected_lifetime_years', sa.Float(), nullable=True))
    op.add_column('interventions', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('interventions', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.drop_index(op.f('ix_interventions_name'), table_name='interventions')
    op.create_index(op.f('ix_interventions_name'), 'interventions', ['name'], unique=False)
    op.create_index(op.f('ix_interventions_intervention_type'), 'interventions', ['intervention_type'], unique=False)
    op.create_index(op.f('ix_interventions_operator'), 'interventions', ['operator'], unique=False)
    op.create_index(op.f('ix_interventions_status'), 'interventions', ['status'], unique=False)
    op.drop_column('interventions', 'type')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('interventions', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_interventions_status'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_operator'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_intervention_type'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_name'), table_name='interventions')
    op.create_index(op.f('ix_interventions_name'), 'interventions', ['name'], unique=True)
    op.drop_column('interventions', 'updated_at')
    op.drop_column('interventions', 'created_at')
    op.drop_column('interventions', 'expected_lifetime_years')
    op.drop_column('interventions', 'verification_method')
    op.drop_column('interventions', 'technology_readiness_level')
    op.drop_column('interventions', 'cost_per_tonne')
    op.drop_column('interventions', 'operator')
    op.drop_column('interventions', 'status')
    op.drop_column('interventions', 'capacity_tonnes_co2')
    op.drop_column('interventions', 'deployment_date')
    op.drop_column('interventions', 'location_lon')
    op.drop_column('interventions', 'location_lat')
    op.drop_column('interventions', 'intervention_type')
    op.drop_column('interventions', 'description')
    # ### end Alembic commands ###
